// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

function init(config) {
  return {
          cozyURL: config.cozyURL,
          ticked: 0,
          changesStatus: /* ChangesFeedNeverFetched */0
        };
}

function incrementTicked(current) {
  return /* tuple */[
          {
            cozyURL: current.cozyURL,
            ticked: current.ticked + 1 | 0,
            changesStatus: current.changesStatus
          },
          /* [] */0
        ];
}

function checkFetchChanges(current) {
  var match = current.changesStatus;
  if (typeof match === "number" && match === 0) {
    return /* tuple */[
            {
              cozyURL: current.cozyURL,
              ticked: current.ticked,
              changesStatus: /* ChangesFeedCurrentlyFetching */1
            },
            /* :: */[
              /* FetchChangesFeed */0,
              /* [] */0
            ]
          ];
  } else {
    return /* tuple */[
            current,
            /* [] */0
          ];
  }
}

function combineHandlers(handlers) {
  return (function (model) {
      var _handlers = handlers;
      var _current = model;
      var _acc = /* [] */0;
      while(true) {
        var acc = _acc;
        var current = _current;
        var handlers$1 = _handlers;
        if (!handlers$1) {
          return /* tuple */[
                  current,
                  acc
                ];
        }
        var match = Curry._1(handlers$1[0], current);
        _acc = Belt_List.concat(acc, match[1]);
        _current = match[0];
        _handlers = handlers$1[1];
        continue ;
      };
    });
}

var handleTick = combineHandlers(/* :: */[
      incrementTicked,
      /* :: */[
        checkFetchChanges,
        /* [] */0
      ]
    ]);

function update(current, $$event) {
  if ($$event) {
    return /* tuple */[
            current,
            /* [] */0
          ];
  } else {
    return handleTick(current);
  }
}

exports.init = init;
exports.incrementTicked = incrementTicked;
exports.checkFetchChanges = checkFetchChanges;
exports.combineHandlers = combineHandlers;
exports.handleTick = handleTick;
exports.update = update;
/* handleTick Not a pure module */
