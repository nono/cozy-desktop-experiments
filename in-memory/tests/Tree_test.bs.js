// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var FastCheck = require("fast-check");
var Tree$InMemory = require("../src/Tree.bs.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Belt_SetString = require("bs-platform/lib/js/belt_SetString.js");
var FastCheck$InMemory = require("./FastCheck.bs.js");

var rootID = "root-dir";

var generator = FastCheck.array(FastCheck.string());

function fromArray(ids) {
  var _acc = Tree$InMemory.init(rootID);
  var _ids = Belt_List.fromArray(ids);
  while(true) {
    var ids$1 = _ids;
    var acc = _acc;
    if (!ids$1) {
      return acc;
    }
    var id = ids$1.hd;
    _ids = ids$1.tl;
    _acc = Tree$InMemory.addNode(acc, {
          id: /* ID */{
            _0: id
          },
          parentID: /* ID */{
            _0: acc.rootID
          },
          name: id,
          extra: id
        });
    continue ;
  };
}

var BasicTree = {
  rootID: rootID,
  generator: generator,
  fromArray: fromArray
};

Jest.describe("Tree", (function (param) {
        return Jest.test("addNode", (function (param) {
                      var checkAddNodes = function (ids) {
                        var tree = fromArray(ids);
                        var uniques = Belt_SetString.fromArray(ids);
                        return Belt_MapString.size(tree.nodes) === Belt_SetString.size(uniques);
                      };
                      return FastCheck$InMemory.expect(generator, checkAddNodes);
                    }));
      }));

exports.BasicTree = BasicTree;
/* generator Not a pure module */
